services:
  mongo1:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: mongo1
    restart: unless-stopped
    ports:
      - "27017:27017"
    networks:
      - mongo-cluster
    volumes:
      - mongo1_data:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile
    env_file:
      - .env
    command: ["--replSet", "rs0", "--bind_ip_all", "--keyFile", "/etc/mongo-keyfile", "--auth"]

  mongo2:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: mongo2
    restart: unless-stopped
    ports:
      - "27018:27017"
    networks:
      - mongo-cluster
    volumes:
      - mongo2_data:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile
    env_file:
      - .env
    command: ["--replSet", "rs0", "--bind_ip_all", "--keyFile", "/etc/mongo-keyfile", "--auth"]

  mongo3:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: mongo3
    restart: unless-stopped
    ports:
      - "27019:27017"
    networks:
      - mongo-cluster
    volumes:
      - mongo3_data:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile
    env_file:
      - .env
    command: ["--replSet", "rs0", "--bind_ip_all", "--keyFile", "/etc/mongo-keyfile", "--auth"]

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8081:8081"
    networks:
      - mongo-cluster
    env_file:
      - .env

networks:
  mongo-cluster:
    driver: bridge

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
